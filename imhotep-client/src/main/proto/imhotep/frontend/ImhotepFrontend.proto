package imhotep.frontend;

import "imhotep/Imhotep.proto";

option java_package = "com.indeed.imhotep.frontend.protobuf";
option java_outer_classname = "ImhotepFrontendProtos";
option java_multiple_files = true;

message ImhotepFrontendRequest {
  enum RequestType {
    TOP_TERMS = 1;
    GET_STATUS_DUMPS = 2;
    GET_SHARD_LIST = 3;
    START_TOP_TERMS = 4;
    POLL_TOP_TERMS = 5;
    SHUTDOWN = 255;
  }

  optional RequestType request_type = 1;

  optional string dataset = 2;

  repeated string int_field = 3;
  repeated string str_field = 4;
  repeated string metric = 5;

  optional int64 start_time = 6;
  optional int64 end_time = 7;

  optional int32 sort_stat_index = 8;
  optional int32 sort_divide_stat_index = 9;

  optional int32 k = 10;

  optional QueryMessage query = 11;

  optional bool add_time_to_query = 12 [default = false];

  optional bool reverse_sort = 13 [default = false];

  optional int32 results_sort_stat_index = 14;
  optional int32 results_sort_divide_stat_index = 15;
  optional bool results_reverse_sort = 16 [default = false];

  optional int32 merge_thread_limit = 17 [default = 0];

  optional string time_field_name = 18 [default = "time"];

  optional string request_id = 19;

  optional string secondary_dataset = 20;

  repeated string sec_int_field = 21;
  repeated string sec_str_field = 22;

  repeated int32 metric_indexes = 23;
  repeated int32 sec_metric_indexes = 24;

  optional QueryMessage sec_query = 25;

  optional string join_key_1 = 26;

  optional bool join_key_1_is_int = 27 [default = false];

  optional string join_key_2 = 28;

  optional bool join_key_2_is_int = 29 [default = false];

  repeated string substring_filter = 30;

  repeated bool substring_filter_match = 31;

  optional string username = 32;
}

message TermStatsMessage {
  optional TermMessage term = 1;
  repeated int64 stat = 2;
}

message TimingMessage {
  optional string name = 1;
  optional int64 time_millis = 2;
  repeated TimingMessage child = 3;
}

message ImhotepFrontendResponse {
  enum ResponseCode {
    OK = 1;
    UNSPECIFIED_ERROR = 2;
    OUT_OF_MEMORY = 3;
    INVALID_REQUEST = 4;
    STILL_RUNNING = 5;
  }

  optional ResponseCode response_code = 1 [default = OK];

  repeated TermStatsMessage top_term = 2;

  repeated StatusDumpMessage status_dump = 3;

  repeated DatasetInfoMessage dataset_info = 4;

  optional TimingMessage timing = 5;

  repeated int64 total_stat = 6;

  optional string error_message = 7;

  optional uint32 term_count = 8;

  optional string request_id = 9;

  optional double progress = 10;
}
